ggplot(pc_df, aes(PC1, PC2, color = group)) +
geom_point(size = 3) +
geom_text(aes(label = labels, vjust = vjust), hjust = 1.2, show_guide = FALSE) +
labs(col = "") +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(1.5), vjust = -0.2), axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
library(grid)
ggplot(pc_df, aes(PC1, PC2, color = group)) +
geom_point(size = 3) +
geom_text(aes(label = labels, vjust = vjust), hjust = 1.2, show_guide = FALSE) +
labs(col = "") +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(1.5), vjust = -0.2), axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
View(pc_df)
pc_df <- as.data.frame(x)
pc_df$sample <- samples
pc_df$condition <- as.factor(c(rep("Normal",7), rep("IPF",8)))
pc_df$group <- as.factor(c(rep("Group 0", 4), "Group 1", "Group 0", "Group 1", "Group 2", "Group 1", rep("Group 0", 4), "Group 2", "Group 0"))
colnames(pc_df)
pc_df$label <- c(rep("", 4), "Healthy5", "", "Healthy8", "IPF1", "IPF2", rep("", 4), "IPF7", "")
pc_df$vjust <- c(rep(.4, 7), 0, rep(.4,7))
library(ggplot2)
library(grid)
ggplot(pc_df, aes(PC1, PC2, color = group)) +
geom_point(size = 3) +
geom_text(aes(label = labels, vjust = vjust), hjust = 1.2, show_guide = FALSE) +
labs(col = "") +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(1.5), vjust = -0.2), axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
ggplot(pc_df, aes(PC1, PC2, color = group)) +
geom_point(size = 3) +
geom_text(aes(label = labels, vjust = vjust), hjust = 1.2, show_guide = FALSE) +
labs(col = "") +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(1.5), vjust = -0.2), axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
ggplot(pc_df, aes(PC1, PC2, color = group)) +
geom_point(size = 3) +
geom_text(aes(label = label, vjust = vjust), hjust = 1.2, show_guide = FALSE) +
labs(col = "") +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(1.5), vjust = -0.2), axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
ggplot(pc_df, aes(PC1, PC2, color = group)) +
geom_point(size = 3) +
geom_text(aes(label = sample, vjust = vjust), hjust = 1.2, show_guide = FALSE) +
labs(col = "") +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(1.5), vjust = -0.2), axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
pc_df$vjust <- c(rep(-.4, 4), .4, -.4, rep(.4, 3), rep(-.4, 4), .4, -.4)
ggplot(pc_df, aes(PC1, PC2, color = group)) +
geom_point(size = 3) +
geom_text(aes(label = sample, vjust = vjust), hjust = 1.2, show_guide = FALSE) +
labs(col = "") +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(1.5), vjust = -0.2), axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
pc_df$vjust <- c(rep(-.4, 4), .4, -.4, rep(.4, 3), rep(-.4, 4), .4, -.4)
ggplot(pc_df, aes(PC1, PC2, color = group)) +
geom_point(size = 3) +
geom_text(aes(label = sample, vjust = vjust), hjust = 1.2, show_guide = FALSE) +
labs(col = "") +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(1.5), vjust = -0.2), axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
geom_text
?geom_text
pc_df$hjust <- c(rep(-.4, 4), 0, -.4, rep(0, 3), rep(-.4, 4), 0, -.4)
pc_df$vjust <- c(rep(.4, 7), 0, rep(.4,7))
ggplot(pc_df, aes(PC1, PC2, color = group)) +
geom_point(size = 3) +
geom_text(aes(label = sample, vjust = vjust, hjust = hjust), hjust = 1.2, show_guide = FALSE) +
labs(col = "") +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(1.5), vjust = -0.2), axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
ggplot(pc_df, aes(PC1, PC2, color = group)) +
geom_point(size = 3) +
geom_text(aes(label = sample, vjust = vjust), hjust = 1.2, show_guide = FALSE) +
labs(col = "") +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(1.5), vjust = -0.2), axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
pc_df$hjust <- c(rep(-1.2, 4), 1.2, -1.2, rep(1.2, 3), rep(-1.2, 4), 1.2, -1.2)
pc_df$hjust <- c(rep(-1.2, 4), 1.2, -1.2, rep(1.2, 3), rep(-1.2, 4), 1.2, -1.2)
pc_df$vjust <- c(rep(.4, 7), 0, rep(.4,7))
ggplot(pc_df, aes(PC1, PC2, color = group)) +
geom_point(size = 3) +
geom_text(aes(label = sample, vjust = vjust, hjust = hjust), show_guide = FALSE) +
labs(col = "") +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(1.5), vjust = -0.2), axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
pc_df$hjust <- c(rep(-.2, 4), 1.2, -.2, rep(1.2, 3), rep(-.2, 4), 1.2, -.2)
pc_df$vjust <- c(rep(.4, 7), 0, rep(.4,7))
ggplot(pc_df, aes(PC1, PC2, color = group)) +
geom_point(size = 3) +
geom_text(aes(label = sample, vjust = vjust, hjust = hjust), show_guide = FALSE) +
labs(col = "") +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(1.5), vjust = -0.2), axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
thous <- myread("~/Dropbox/mont_lab/2012_ipflung/genotype/genotype2/forpic.txt")
library(myrw)
thous <- myread("~/Dropbox/mont_lab/2012_ipflung/genotype/genotype2/forpic.txt")
thous$origin[thous$origin == "X"] <- "Samples"
ggplot(thous, aes(PC1, PC2, color = origin)) +
geom_point() +
theme_bw() +
guides(color = guide_legend(override.aes = list(size = 4))) +
theme(axis.title.x = element_text(size = rel(1.5), vjust = -0.2),
axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.2, "cm"))
View(thous)
thous$label <- ""
thous$label[thous$origin == "Samples"] <- samples
ggplot(thous, aes(PC1, PC2, color = origin)) +
geom_point() +
geom_text(aes(label = label), show_guide = FALSE) +
theme_bw() +
guides(color = guide_legend(override.aes = list(size = 4))) +
theme(axis.title.x = element_text(size = rel(1.5), vjust = -0.2),
axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.2, "cm"))
ggplot(thous, aes(PC1, PC2, color = origin)) +
geom_point() +
geom_text(aes(label = label), show_guide = FALSE) +
theme_bw() +
guides(color = guide_legend(override.aes = list(size = 4))) +
scale_colour_manual(values = c("red","blue", "green", "black", "magenta")) +
theme(axis.title.x = element_text(size = rel(1.5), vjust = -0.2),
axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.2, "cm"))
ggplot(thous, aes(PC1, PC2, color = origin)) +
geom_point() +
geom_text(aes(label = label), show_guide = FALSE) +
theme_bw() +
guides(color = guide_legend(override.aes = list(size = 4))) +
scale_colour_manual(values = c("red", "cyan", "green", "black", "magenta")) +
theme(axis.title.x = element_text(size = rel(1.5), vjust = -0.2),
axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.2, "cm"))
ggplot(thous, aes(PC1, PC2, color = origin)) +
geom_point() +
geom_text(aes(label = label), show_guide = FALSE) +
theme_bw() +
guides(color = guide_legend(override.aes = list(size = 4))) +
scale_colour_manual(values = c("magenta", "cyan", "green", "black", "purple")) +
theme(axis.title.x = element_text(size = rel(1.5), vjust = -0.2),
axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.2, "cm"))
ggplot(thous, aes(PC1, PC2, color = origin)) +
geom_point() +
geom_text(aes(label = label), show_guide = FALSE) +
theme_bw() +
guides(color = guide_legend(override.aes = list(size = 4))) +
scale_colour_manual(values = c("magenta", "cyan", "green", "black", "orange")) +
theme(axis.title.x = element_text(size = rel(1.5), vjust = -0.2),
axis.title.y = element_text(size = rel(1.5), vjust = 0.2),
legend.title = element_text(size = rel(1.5)), legend.text = element_text(size = rel(1.5)),
axis.text.x = element_text(size = rel(1.5)), axis.text.y = element_text(size = rel(1.5)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.2, "cm"))
library(myrw)
library(xtable)
res <- myread("/Users/tracy/Dropbox/mont_lab/2012_ipflung/star/star3_DEXSeq/norm7_noM/DEX.res.names.txt")
sig <- myread("/Users/tracy/Dropbox/mont_lab/2012_ipflung/star/star3_DEXSeq/DEX.sig.txt")
dex.sig <- myread("/Users/tracy/Dropbox/mont_lab/2012_ipflung/star/star3_DEXSeq/norm7_noM_noOverlap/dex.sig.5.txt")
colnames(dex.sig)
top_ten <- dex.sig[1:10, c(13, 4, 5, 8, 14)]
colnames(top_ten)[2:4] <- c("pval", "padj", "exon")
top_ten$in_IPF <- vapply(dex.sig[1:10,]$log2fold.IPF.Normal., function(x) ifelse(x < 0, "down-regulated", "up-regulated"), character(1))
top_ten[1:2,]
subset(res, grepl("ENSG00000133110.10", geneID))
load("/Users/tracy/Dropbox/mont_lab/2012_ipflung/star/star3_DEXSeq/norm7_noM/dexseq_012_testedDEU.RData")
subset(res, grepl("ENSG00000133110.10", geneID))
plotDEXSeq(exon.counts, "ENSG00000133110.10", cex.axis = 1.2, cex = 1.3, lwd = 2, legend = TRUE, FDR = .01)
plotDEXSeq(exon.counts, gene()$ensembl_long, displayTranscripts = TRUE,
cex.axis = 1.5, cex = 1.5, lwd = 2, legend = TRUE, names = TRUE, FDR = 0.01,
splicing = TRUE, expression = TRUE, norCounts = TRUE)
plotDEXSeq(exon.counts, "ENSG00000133110.10", displayTranscripts = TRUE,
cex.axis = 1.5, cex = 1.5, lwd = 2, legend = TRUE, names = TRUE, FDR = 0.01,
splicing = TRUE, expression = TRUE, norCounts = TRUE)
plotDEXSeq(exon.counts, "ENSG00000133110.10", displayTranscripts = TRUE,
cex.axis = 1.5, cex = 1.5, lwd = 2, legend = TRUE, names = TRUE, FDR = 0.01,
splicing = TRUE, expression = TRUE, norCounts = FALSE)
?plotDEXSeq
plotDEXSeq(exon.counts, "ENSG00000133110.10", displayTranscripts = TRUE,
cex.axis = 1.5, cex = 1.5, lwd = 2, legend = TRUE, names = FALSE, FDR = 0.01,
splicing = TRUE, expression = TRUE, norCounts = FALSE)
?update.packages
plot.df.meta <- myread("/Users/tracy/Dropbox/mont_lab/2012_ipflung/GWAS/plot.df.meta.txt")
library(plyr)
library(xtable)
library(ggplot2)
library(grid)
library(myrw)
plot.df.meta <- myread("/Users/tracy/Dropbox/mont_lab/2012_ipflung/GWAS/plot.df.meta.txt")
plot.df <- myread("/Users/tracy/Dropbox/mont_lab/2012_ipflung/GWAS/plot.df.discovery.txt")
View(plot.df.meta)
View(plot.df)
g <- ggplot(plot.df, aes(x = gwas.score, y = mean.score)) +
geom_abline(slope = 1, intercept = 0) +
geom_errorbar(aes(ymin = mean.score - sd, ymax = mean.score + sd, width = gwas.score/30.1), color="#E41A1C",  size = 1) +
geom_point(size = 5, color = "#E41A1C") +
xlab("-log10(pval) of GWAS genes") +
ylab("-log10(pval) of random set") +
coord_fixed() +
xlim(0,8.7) + ylim(0,8.7) +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(2), vjust = -0.2), axis.title.y = element_text(size = rel(2), vjust = 0.2),
legend.title = element_text(size = rel(2)), legend.text = element_text(size = rel(2)),
axis.text = element_text(size = rel(2)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
g + coord_flip()
g <- ggplot(plot.df.meta, aes(x = gwas.score, y = mean.score)) +
geom_abline(slope = 1, intercept = 0) +
geom_errorbar(aes(ymin = mean.score - sd, ymax = mean.score + sd, width = gwas.score/30.1), color="#377EB8", size = 1) +
geom_point(size = 5, color = "#377EB8") +
xlab("-log10(pval) of GWAS genes") +
ylab("-log10(pval) of random set") +
coord_fixed() +
xlim(0,8.7) + ylim(0,8.7) +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(2), vjust = -0.2), axis.title.y = element_text(size = rel(2), vjust = 0.2),
legend.title = element_text(size = rel(2)), legend.text = element_text(size = rel(2)),
axis.text = element_text(size = rel(2)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
g + coord_flip()
temp1 <- transform(plot.df, set = "discovery")
temp2 <- transform(plot.df.meta, set = "validated")
plot.df.all <- rbind(temp1, temp2)
library(grid)
g <- ggplot(plot.df.all, aes(x = gwas.score, y = mean.score, color = set)) +
geom_abline(slope = 1, intercept = 0) +
geom_point(size = 5) +
geom_line() +
xlab("-log10(pval) of GWAS genes") +
ylab("mean -log10(pval) of 10,000 random sets") +
coord_fixed() +
xlim(0,7.5) + ylim(0,7.5) +
scale_color_manual(values = c("#E41A1C", "#377EB8"), guide = guide_legend(title = NULL)) +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(2), vjust = -0.2), axis.title.y = element_text(size = rel(2), vjust = 0.2),
legend.title = element_text(size = rel(2)), legend.text = element_text(size = rel(2)),
axis.text = element_text(size = rel(2)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
g + coord_flip()
num_sig <- numeric(10000)
perm_pval <- matrix(data = rep(-1, 10000*numTested), nrow = 10000, ncol = numTested)
load("data/GWAS_genes.RData")
setwd("/Users/tracy/Dropbox/mont_lab/2012_ipflung/master/IPF_scripts/runGwasEnrichment")
load("data/GWAS_genes.RData")
num_sig <- numeric(10000)
perm_pval <- matrix(data = rep(-1, 10000*nGwasTested), nrow = 10000, ncol = nGwasTested)
perm_padj <- matrix(data = rep(-1, 10000*nGwasTested), nrow = 10000, ncol = nGwasTested)
perm_hit_genes <- de.res[sample(1:nrow(de.res), nGwasTested, replace = FALSE),]
?set.seed()
load("data/GWAS_genes.RData")
set.seed(1865)
num_sig <- numeric(10000)
perm_pval <- matrix(data = rep(-1, 10000*nGwasTested), nrow = 10000, ncol = nGwasTested)
perm_padj <- matrix(data = rep(-1, 10000*nGwasTested), nrow = 10000, ncol = nGwasTested)
perm_hit_genes <- results.4.012[sample(1:nrow(results.4.012), nGwasTested, replace = FALSE),]
perm_pval[i,] <- arrange(perm_hit_genes, pval)$pval
i <- 1
perm_pval[i,] <- arrange(perm_hit_genes, pval)$pval
perm_padj[i,] <- arrange(perm_hit_genes, padj)$padj
num_sig[i] <- length(which(perm_hit_genes$gene_ID %in% sig.4.012$gene_ID))
set.seed(1865)
num_sig <- numeric(10000)
perm_pval <- matrix(data = rep(-1, 10000*nGwasTested), nrow = 10000, ncol = nGwasTested)
perm_padj <- matrix(data = rep(-1, 10000*nGwasTested), nrow = 10000, ncol = nGwasTested)
for(i in 1:10000){
perm_hit_genes <- results.4.012[sample(1:nrow(results.4.012), nGwasTested, replace = FALSE),]
perm_pval[i,] <- arrange(perm_hit_genes, pval)$pval
perm_padj[i,] <- arrange(perm_hit_genes, padj)$padj
num_sig[i] <- length(which(perm_hit_genes$gene_ID %in% sig.4.012$gene_ID))
}
hist(num_sig, 100)
load("data/GWAS_genes.RData")
set.seed(1865)
num_sig <- numeric(10000)
perm_pval <- matrix(data = rep(-1, 10000*nGwasTested), nrow = 10000, ncol = nGwasTested)
perm_padj <- matrix(data = rep(-1, 10000*nGwasTested), nrow = 10000, ncol = nGwasTested)
for(i in 1:10000){
perm_hit_genes <- results.4.012[sample(1:nrow(results.4.012), nGwasTested, replace = FALSE),]
perm_pval[i,] <- arrange(perm_hit_genes, pval)$pval
perm_padj[i,] <- arrange(perm_hit_genes, padj)$padj
num_sig[i] <- length(which(perm_hit_genes$gene_ID %in% sig.4.012$gene_ID))
}
hist(num_sig, 100)
nlog_perm_pval <- -log10(perm_pval)
plot.df <- data.frame(gwas.score = -log10(arrange(de.gwas, pval)$pval), mean.score = colMeans(nlog_perm_pval), sd = apply(nlog_perm_pval, 2, sd))
de.gwas <- subset(results.4.012, gene_ID %in% ensembl_ids)
plot.df <- data.frame(gwas.score = -log10(arrange(de.gwas, pval)$pval), mean.score = colMeans(nlog_perm_pval), sd = apply(nlog_perm_pval, 2, sd))
library(plyr)
library(xtable)
library(ggplot2)
library(grid)
library(myrw)
g <- ggplot(plot.df, aes(x = gwas.score, y = mean.score)) +
geom_abline(slope = 1, intercept = 0) +
geom_errorbar(aes(ymin = mean.score - sd, ymax = mean.score + sd, width = gwas.score/30.1), color="#E41A1C",  size = 1) +
geom_point(size = 5, color = "#E41A1C") +
xlab("-log10(pval) of GWAS genes") +
ylab("-log10(pval) of random set") +
coord_fixed() +
xlim(0,8.7) + ylim(0,8.7) +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(2), vjust = -0.2), axis.title.y = element_text(size = rel(2), vjust = 0.2),
legend.title = element_text(size = rel(2)), legend.text = element_text(size = rel(2)),
axis.text = element_text(size = rel(2)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
g + coord_flip()
g + coord_flip()
rsids <- read.table("data/validationSNPs.txt", header = FALSE, as.is = TRUE, sep = "\t", quote = "", na = "", comment = "")
snp_db <- useMart("snp", dataset="hsapiens_snp")
annotations <- getBM(c("refsnp_id", "allele", "minor_allele", "minor_allele_freq", "chr_name","chrom_start",
"chrom_strand","associated_gene",
"ensembl_gene_stable_id", "phenotype_description"),
filters="snp_filter",
values=rsids,
mart=snp_db)
annotations <- arrange(annotations, refsnp_id)
length(unique(annotations$refsnp_id))
ensembl_ids <- as.character(annotations$ensembl_gene_stable_id)
ensembl_ids <- unique(ensembl_ids)
ensembl_ids <- ensembl_ids[ensembl_ids != ""]
hit_genes <- data.frame(gene_ID = ensembl_ids, stringsAsFactors = FALSE)
hit_genes <- add_gene_names(hit_genes)
## load DE data
load("../runDESeq/data/DESeq_012_norm7_fix_pval.RData")
## total number of genes tested
nTested <- nrow(results.4.012)
## number of those that were significantly differentially expressed at FDR < 5%
nDEsig <- nrow(sig.4.012)
## number of DE genes in GWAS hits
nOverlap <- length(which(hit_genes$gene_ID %in% sig.4.012$gene_ID))
## number of GWAS genes tested for DE
nGwasTested <- length(which(hit_genes$gene_ID %in% results.4.012$gene_ID))
## calculate the hypergeometric p-value
phyper(q = nOverlap - 1, m = nDEsig, n = nTested - nDEsig, k = nGwasTested, lower.tail = FALSE)
phyper(q = 8 - 1, m = 873, n = 30762 - 873, k = 110, lower.tail = FALSE)
save.image("data/GWAS_validation.RData")
source("../helperFunctions/myrw.R")
load("data/GWAS_discovery.RData")
set.seed(1865)
num_sig <- numeric(10000)
perm_pval <- matrix(data = rep(-1, 10000*nGwasTested), nrow = 10000, ncol = nGwasTested)
perm_padj <- matrix(data = rep(-1, 10000*nGwasTested), nrow = 10000, ncol = nGwasTested)
for(i in 1:10000){
perm_hit_genes <- results.4.012[sample(1:nrow(results.4.012), nGwasTested, replace = FALSE),]
perm_pval[i,] <- arrange(perm_hit_genes, pval)$pval
perm_padj[i,] <- arrange(perm_hit_genes, padj)$padj
num_sig[i] <- length(which(perm_hit_genes$gene_ID %in% sig.4.012$gene_ID))
}
hist(num_sig, 100)
nlog_perm_pval <- -log10(perm_pval)
de.gwas <- subset(results.4.012, gene_ID %in% ensembl_ids)
plot.df <- data.frame(gwas.score = -log10(arrange(de.gwas, pval)$pval), mean.score = colMeans(nlog_perm_pval), sd = apply(nlog_perm_pval, 2, sd))
mywrite(plot.df, "data/plot_df_discovery.txt")
load("data/GWAS_validation.RData")
set.seed(1865)
num_sig <- numeric(10000)
perm_pval <- matrix(data = rep(-1, 10000*nGwasTested), nrow = 10000, ncol = nGwasTested)
perm_padj <- matrix(data = rep(-1, 10000*nGwasTested), nrow = 10000, ncol = nGwasTested)
for(i in 1:10000){
perm_hit_genes <- results.4.012[sample(1:nrow(results.4.012), nGwasTested, replace = FALSE),]
perm_pval[i,] <- arrange(perm_hit_genes, pval)$pval
perm_padj[i,] <- arrange(perm_hit_genes, padj)$padj
num_sig[i] <- length(which(perm_hit_genes$gene_ID %in% sig.4.012$gene_ID))
}
hist(num_sig, 100)
nlog_perm_pval <- -log10(perm_pval)
de.gwas <- subset(results.4.012, gene_ID %in% ensembl_ids)
plot.df <- data.frame(gwas.score = -log10(arrange(de.gwas, pval)$pval), mean.score = colMeans(nlog_perm_pval), sd = apply(nlog_perm_pval, 2, sd))
mywrite(plot.df, "data/plot_df_validation.txt")
library(plyr)
library(xtable)
library(ggplot2)
library(grid)
source("../helperFunctions/myrw.R")
plot.df <- myread("data/plot_df_discovery.txt")
plot.df.meta <- myread("data/plot_df_validation.txt")
g <- ggplot(plot.df, aes(x = gwas.score, y = mean.score)) +
geom_abline(slope = 1, intercept = 0) +
geom_errorbar(aes(ymin = mean.score - sd, ymax = mean.score + sd, width = gwas.score/30.1), color="#E41A1C",  size = 1) +
geom_point(size = 5, color = "#E41A1C") +
xlab("-log10(pval) of GWAS genes") +
ylab("-log10(pval) of random set") +
coord_fixed() +
xlim(0,8.7) + ylim(0,8.7) +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(2), vjust = -0.2), axis.title.y = element_text(size = rel(2), vjust = 0.2),
legend.title = element_text(size = rel(2)), legend.text = element_text(size = rel(2)),
axis.text = element_text(size = rel(2)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
g + coord_flip()
g <- ggplot(plot.df.meta, aes(x = gwas.score, y = mean.score)) +
geom_abline(slope = 1, intercept = 0) +
geom_errorbar(aes(ymin = mean.score - sd, ymax = mean.score + sd, width = gwas.score/30.1), color="#377EB8", size = 1) +
geom_point(size = 5, color = "#377EB8") +
xlab("-log10(pval) of GWAS genes") +
ylab("-log10(pval) of random set") +
coord_fixed() +
xlim(0,8.7) + ylim(0,8.7) +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(2), vjust = -0.2), axis.title.y = element_text(size = rel(2), vjust = 0.2),
legend.title = element_text(size = rel(2)), legend.text = element_text(size = rel(2)),
axis.text = element_text(size = rel(2)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
g + coord_flip()
temp1 <- transform(plot.df, set = "discovery")
temp2 <- transform(plot.df.meta, set = "validated")
plot.df.all <- rbind(temp1, temp2)
g <- ggplot(plot.df.all, aes(x = gwas.score, y = mean.score, color = set)) +
geom_abline(slope = 1, intercept = 0) +
geom_point(size = 5) +
geom_line() +
xlab("-log10(pval) of GWAS genes") +
ylab("mean -log10(pval) of 10,000 random sets") +
coord_fixed() +
xlim(0,7.5) + ylim(0,7.5) +
scale_color_manual(values = c("#E41A1C", "#377EB8"), guide = guide_legend(title = NULL)) +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),
axis.title.x = element_text(size = rel(2), vjust = -0.2), axis.title.y = element_text(size = rel(2), vjust = 0.2),
legend.title = element_text(size = rel(2)), legend.text = element_text(size = rel(2)),
axis.text = element_text(size = rel(2)),
plot.margin = unit(c(1,1,1,1), "cm"),
legend.key.size = unit(1.5, "cm"))
g + coord_flip()
